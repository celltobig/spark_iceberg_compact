-- kafka 写入 湖v2表
-- 注册hive
-- CREATE CATALOG my_hive WITH (
--     'type' = 'hive',
--     'hive-conf-dir' = '/opt/flink-1.14.0/conf',
--     'hadoop-conf-dir'='/etc/hadoop/conf'
--     );
-- 注册iceberg
CREATE CATALOG my_iceberg WITH (
    'type' = 'iceberg',
    'catalog-type'='hive',
    'uri'='thrift://xxxxx:9083',
    'clients'='5',
    'property-version'='1',
    'hive-conf-dir' = '/opt/flink-1.14.0/conf'
);

USE CATALOG hive;
USE dl_ods;
SET table.exec.sink.not-null-enforcer=drop;
SET sql-client.execution.result-mode=TABLEAU;


drop TABLE IF EXISTS `hive`.`dl_test`.`ods_kafka_cowell_order_base_stream_v2`;
CREATE TABLE `hive`.`dl_test`.`ods_kafka_cowell_order_base_stream_v2` (
                                                                          `id` bigint,
                                                                          `order_id` bigint,
                                                                          `type` int,
                                                                          `user_id` bigint,
                                                                          `platform_user_id` bigint,
                                                                          `business_id` bigint,
                                                                          `business_name` varchar(128),
                                                                          `store_id` bigint,
                                                                          `order_status` bigint,
                                                                          `order_status_cur` int,
                                                                          `pay_amount` int,
                                                                          `total_amount` int,
                                                                          `coupon_amount` int,
                                                                          `express_no` varchar(32),
                                                                          `express_fee` int,
                                                                          `consignee_id` bigint,
                                                                          `consignee` varchar(32),
                                                                          `consignee_phone` varchar(16),
                                                                          `consignee_province` varchar(32),
                                                                          `consignee_city` varchar(32),
                                                                          `consignee_area` varchar(32),
                                                                          `consignee_address` varchar(256),
                                                                          `remarks` varchar(256),
                                                                          `pay_channel` varchar(32),
                                                                          `refund_amount` int,
                                                                          `refund_reason` varchar(128),
                                                                          `refund_remarks` varchar(512),
                                                                          `pay_time` timestamp(3),
                                                                          `complete_time` timestamp(3),
                                                                          `refund_time` timestamp(3),
                                                                          `cancel_time` timestamp(3),
                                                                          `gmt_create` timestamp(3),
                                                                          `gmt_update` timestamp(3),
                                                                          `gmt_update_ms` timestamp(3),
                                                                          `status` int,
                                                                          `extend` string,
                                                                          `version` int,
                                                                          `pay_points` int,
                                                                          `third_party_order_no` varchar(64),
                                                                          `promotion_discounts` int,
                                                                          `member_plus_discounts` int,
                                                                          `item_type` int,
                                                                          `wipe_money` int,
                                                                          `pay_type` int,
                                                                          `store_name` varchar(128),
                                                                          `total_original_amount` int,
                                                                          `promotion_info` string,
                                                                          `promotion_label` varchar(1024),
                                                                          `cashier` varchar(64),
                                                                          `cashier_id` bigint,
                                                                          `purchase_pay_amount` int,
                                                                          `order_sign` varchar(64),
                                                                          `offline_coupon_amount` bigint,
                                                                          `points_discount_amount` bigint,
                                                                          `shift_id` bigint,
                                                                          `order_source` int,
                                                                          `present_points` bigint,
                                                                          `commented` int,
                                                                          `coupon_info` varchar(2048),
                                                                          `is_self_pickup` int,
                                                                          `encrypt_consignee_address` varchar(1024),
                                                                          `encrypt_Consignee` varchar(100),
                                                                          `encrypt_consignee_phone` varchar(100)
)WITH (
     'properties.auto.commit.interval.ms' = '1000',
     'canal-json.ignore-parse-errors' = 'true',
     'format' = 'canal-json',
     'properties.bootstrap.servers' = '1xxxxxxxxxx:9092',
     'connector' = 'kafka',
     'topic' = 'cowell_order_order_base',
     'scan.startup.mode' = 'group-offsets',
     'properties.auto.offset.reset.strategy' = 'earliest',
     'properties.group.id' = 'prod_flink_group_v3',
     'properties.client.id' = 'dl_test.ods_cowell_order_order_base_stream_v2',
     'properties.enable.auto.commit' = 'true'
     );


-- 湖表 v2 表
CREATE TABLE IF NOT EXISTS `my_iceberg`.`dl_test`.`ods_cowell_order_order_base_stream_v2` (
                                                                                              `dt` STRING,
                                                                                              `pt` timestamp_ltz(3),
    `ts` timestamp_ltz(3),
    `id` bigint,
    `order_id` bigint,
    `type` int,
    `user_id` bigint,
    `platform_user_id` bigint,
    `business_id` bigint,
    `business_name` varchar(128),
    `store_id` bigint,
    `order_status` bigint,
    `order_status_cur` int,
    `pay_amount` int,
    `total_amount` int,
    `coupon_amount` int,
    `express_no` varchar(32),
    `express_fee` int,
    `consignee_id` bigint,
    `consignee` varchar(32),
    `consignee_phone` varchar(16),
    `consignee_province` varchar(32),
    `consignee_city` varchar(32),
    `consignee_area` varchar(32),
    `consignee_address` varchar(256),
    `remarks` varchar(256),
    `pay_channel` varchar(32),
    `refund_amount` int,
    `refund_reason` varchar(128),
    `refund_remarks` varchar(512),
    `pay_time` timestamp_ltz(3),
    `complete_time` timestamp_ltz(3),
    `refund_time` timestamp_ltz(3),
    `cancel_time` timestamp_ltz(3),
    `gmt_create` timestamp_ltz(3),
    `gmt_update` timestamp_ltz(3),
    `gmt_update_ms` timestamp_ltz(3),
    `status` int,
    `extend` string,
    `version` int,
    `pay_points` int,
    `third_party_order_no` varchar(64),
    `promotion_discounts` int,
    `member_plus_discounts` int,
    `item_type` int,
    `wipe_money` int,
    `pay_type` int,
    `store_name` varchar(128),
    `total_original_amount` int,
    `promotion_info` string,
    `promotion_label` varchar(1024),
    `cashier` varchar(64),
    `cashier_id` bigint,
    `purchase_pay_amount` int,
    `order_sign` varchar(64),
    `offline_coupon_amount` bigint,
    `points_discount_amount` bigint,
    `shift_id` bigint,
    `order_source` int,
    `present_points` bigint,
    `commented` int,
    `coupon_info` varchar(2048),
    `is_self_pickup` int,
    `encrypt_consignee_address` varchar(1024),
    `encrypt_Consignee` varchar(100),
    `encrypt_consignee_phone` varchar(100),
    PRIMARY KEY (`dt`,`id`) NOT ENFORCED
    )
    PARTITIONED BY (`dt`)
    WITH (
        'format-version' = '2',
        'write.upsert.enabled' = 'true',
        'engine.hive.enabled' = 'true',
        'write.distribution-mode' = 'hash',
        'write.metadata.previous-versions-max' = '1',
        'write.metadata.delete-after-commit.enabled' = 'true',
        'flink.max-continuous-empty-commits'='2147483647'
        );

-- job
INSERT INTO `my_iceberg`.`dl_test`.`ods_cowell_order_order_base_stream_v2`
SELECT
    DATE_FORMAT(JSON_VALUE(f0,'$.gmt_create'),'yyyyMMdd') as dt,  -- 以订单创建时间为单位分区
    proctime() as pt,  -- 入湖的时间
    cast(JSON_VALUE(f0,'$.gmt_update') as timestamp_ltz)as ts,  -- 业务发生的event_time
    cast(JSON_VALUE(f0,'$.id') as  BIGINT ) as id,
    cast(JSON_VALUE(f0,'$.order_id') as  BIGINT ) as order_id,
    cast(JSON_VALUE(f0,'$.type') as  INT ) as type,
    cast(JSON_VALUE(f0,'$.user_id') as  BIGINT ) as user_id,
    cast(JSON_VALUE(f0,'$.platform_user_id') as  BIGINT ) as platform_user_id,
    cast(JSON_VALUE(f0,'$.business_id') as  BIGINT ) as business_id,
    cast(JSON_VALUE(f0,'$.business_name') as  STRING ) as business_name,
    cast(JSON_VALUE(f0,'$.store_id') as  BIGINT ) as store_id,
    cast(JSON_VALUE(f0,'$.order_status') as  BIGINT ) as order_status,
    cast(JSON_VALUE(f0,'$.order_status_cur') as  INT ) as order_status_cur,
    cast(JSON_VALUE(f0,'$.pay_amount') as  INT ) as pay_amount,
    cast(JSON_VALUE(f0,'$.total_amount') as  INT ) as total_amount,
    cast(JSON_VALUE(f0,'$.coupon_amount') as  INT ) as coupon_amount,
    cast(JSON_VALUE(f0,'$.express_no') as  STRING ) as express_no,
    cast(JSON_VALUE(f0,'$.express_fee') as  INT ) as express_fee,
    cast(JSON_VALUE(f0,'$.consignee_id') as  BIGINT ) as consignee_id,
    cast(JSON_VALUE(f0,'$.consignee') as  STRING ) as consignee,
    cast(JSON_VALUE(f0,'$.consignee_phone') as  STRING ) as consignee_phone,
    cast(JSON_VALUE(f0,'$.consignee_province') as  STRING ) as consignee_province,
    cast(JSON_VALUE(f0,'$.consignee_city') as  STRING ) as consignee_city,
    cast(JSON_VALUE(f0,'$.consignee_area') as  STRING ) as consignee_area,
    cast(JSON_VALUE(f0,'$.consignee_address') as  STRING ) as consignee_address,
    cast(JSON_VALUE(f0,'$.remarks') as  STRING ) as remarks,
    cast(JSON_VALUE(f0,'$.pay_channel') as  STRING ) as pay_channel,
    cast(JSON_VALUE(f0,'$.refund_amount') as  INT ) as refund_amount,
    cast(JSON_VALUE(f0,'$.refund_reason') as  STRING ) as refund_reason,
    cast(JSON_VALUE(f0,'$.refund_remarks') as  STRING ) as refund_remarks,
    cast(JSON_VALUE(f0,'$.pay_time') as  TIMESTAMP_LTZ ) aspay_time,
    cast(JSON_VALUE(f0,'$.complete_time') as  TIMESTAMP_LTZ ) ascomplete_time,
    cast(JSON_VALUE(f0,'$.refund_time') as  TIMESTAMP_LTZ ) as refund_time,
    cast(JSON_VALUE(f0,'$.cancel_time') as  TIMESTAMP_LTZ ) as cancel_time,
    cast(JSON_VALUE(f0,'$.gmt_create') as  TIMESTAMP_LTZ ) as gmt_create,
    cast(JSON_VALUE(f0,'$.gmt_update') as  TIMESTAMP_LTZ ) as gmt_update,
    cast(JSON_VALUE(f0,'$.gmt_update_ms') as  TIMESTAMP_LTZ ) as gmt_update_ms,
    cast(JSON_VALUE(f0,'$.status') as  INT ) as status,
    cast(JSON_VALUE(f0,'$.extend') as  STRING ) as `extend`,
    cast(JSON_VALUE(f0,'$.version') as  INT ) as version,
    cast(JSON_VALUE(f0,'$.pay_points') as  INT ) as pay_points,
    cast(JSON_VALUE(f0,'$.third_party_order_no') as  STRING ) as third_party_order_no,
    cast(JSON_VALUE(f0,'$.promotion_discounts') as  INT ) as promotion_discounts,
    cast(JSON_VALUE(f0,'$.member_plus_discounts') as  INT ) as member_plus_discounts,
    cast(JSON_VALUE(f0,'$.item_type') as  INT ) as item_type,
    cast(JSON_VALUE(f0,'$.wipe_money') as  INT ) as wipe_money,
    cast(JSON_VALUE(f0,'$.pay_type') as  INT ) as pay_type,
    cast(JSON_VALUE(f0,'$.store_name') as  STRING ) as store_name,
    cast(JSON_VALUE(f0,'$.total_original_amount') as  INT ) as total_original_amount,
    cast(JSON_VALUE(f0,'$.promotion_info') as  STRING ) as promotion_info,
    cast(JSON_VALUE(f0,'$.promotion_label') as  STRING ) as promotion_label,
    cast(JSON_VALUE(f0,'$.cashier') as  STRING ) as cashier,
    cast(JSON_VALUE(f0,'$.cashier_id') as  BIGINT ) as cashier_id,
    cast(JSON_VALUE(f0,'$.purchase_pay_amount') as  INT ) as purchase_pay_amount,
    cast(JSON_VALUE(f0,'$.order_sign') as  STRING ) as order_sign,
    cast(JSON_VALUE(f0,'$.offline_coupon_amount') as  BIGINT ) as offline_coupon_amount,
    cast(JSON_VALUE(f0,'$.points_discount_amount') as  BIGINT ) as points_discount_amount,
    cast(JSON_VALUE(f0,'$.shift_id') as  BIGINT ) as shift_id,
    cast(JSON_VALUE(f0,'$.order_source') as  INT ) as order_source,
    cast(JSON_VALUE(f0,'$.present_points') as  BIGINT ) as present_points,
    cast(JSON_VALUE(f0,'$.commented') as  INT ) as commented,
    cast(JSON_VALUE(f0,'$.coupon_info') as  STRING ) as coupon_info,
    cast(JSON_VALUE(f0,'$.is_self_pickup') as  INT ) as is_self_pickup,
    cast(JSON_VALUE(f0,'$.encrypt_consignee_address') as  STRING ) as encrypt_consignee_address,
    cast(JSON_VALUE(f0,'$.encrypt_Consignee') as  STRING ) as encrypt_Consignee,
    cast(JSON_VALUE(f0,'$.encrypt_consignee_phone') as  STRING ) as encrypt_consignee_phone
FROM
    hive.dl_source_kafka.kafka_table
;


